// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: api/ocp-quiz-api/ocp_quiz_api.proto

package ocp_quiz_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuizAPIEvent_EventType int32

const (
	QuizAPIEvent_CREATE QuizAPIEvent_EventType = 0
	QuizAPIEvent_READ   QuizAPIEvent_EventType = 1
	QuizAPIEvent_UPDATE QuizAPIEvent_EventType = 2
	QuizAPIEvent_DELETE QuizAPIEvent_EventType = 3
)

// Enum value maps for QuizAPIEvent_EventType.
var (
	QuizAPIEvent_EventType_name = map[int32]string{
		0: "CREATE",
		1: "READ",
		2: "UPDATE",
		3: "DELETE",
	}
	QuizAPIEvent_EventType_value = map[string]int32{
		"CREATE": 0,
		"READ":   1,
		"UPDATE": 2,
		"DELETE": 3,
	}
)

func (x QuizAPIEvent_EventType) Enum() *QuizAPIEvent_EventType {
	p := new(QuizAPIEvent_EventType)
	*p = x
	return p
}

func (x QuizAPIEvent_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuizAPIEvent_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_enumTypes[0].Descriptor()
}

func (QuizAPIEvent_EventType) Type() protoreflect.EnumType {
	return &file_api_ocp_quiz_api_ocp_quiz_api_proto_enumTypes[0]
}

func (x QuizAPIEvent_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuizAPIEvent_EventType.Descriptor instead.
func (QuizAPIEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{13, 0}
}

type Quiz struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClassroomId uint64 `protobuf:"varint,2,opt,name=classroom_id,json=classroomId,proto3" json:"classroom_id,omitempty"`
	UserId      uint64 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Link        string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Quiz) Reset() {
	*x = Quiz{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quiz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quiz) ProtoMessage() {}

func (x *Quiz) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quiz.ProtoReflect.Descriptor instead.
func (*Quiz) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{0}
}

func (x *Quiz) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Quiz) GetClassroomId() uint64 {
	if x != nil {
		return x.ClassroomId
	}
	return 0
}

func (x *Quiz) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Quiz) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type UpdateQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId      uint64 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	UserId      uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClassroomId uint64 `protobuf:"varint,3,opt,name=classroom_id,json=classroomId,proto3" json:"classroom_id,omitempty"`
	Link        string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *UpdateQuizV1Request) Reset() {
	*x = UpdateQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizV1Request) ProtoMessage() {}

func (x *UpdateQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizV1Request.ProtoReflect.Descriptor instead.
func (*UpdateQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateQuizV1Request) GetQuizId() uint64 {
	if x != nil {
		return x.QuizId
	}
	return 0
}

func (x *UpdateQuizV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateQuizV1Request) GetClassroomId() uint64 {
	if x != nil {
		return x.ClassroomId
	}
	return 0
}

func (x *UpdateQuizV1Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type UpdateQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updated bool `protobuf:"varint,1,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UpdateQuizV1Response) Reset() {
	*x = UpdateQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizV1Response) ProtoMessage() {}

func (x *UpdateQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizV1Response.ProtoReflect.Descriptor instead.
func (*UpdateQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateQuizV1Response) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

// Request of Create new Quiz
type CreateQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassroomId uint64 `protobuf:"varint,1,opt,name=classroom_id,json=classroomId,proto3" json:"classroom_id,omitempty"`
	UserId      uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Link        string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *CreateQuizV1Request) Reset() {
	*x = CreateQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizV1Request) ProtoMessage() {}

func (x *CreateQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizV1Request.ProtoReflect.Descriptor instead.
func (*CreateQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateQuizV1Request) GetClassroomId() uint64 {
	if x != nil {
		return x.ClassroomId
	}
	return 0
}

func (x *CreateQuizV1Request) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateQuizV1Request) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type MultiCreateQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quizes []*CreateQuizV1Request `protobuf:"bytes,1,rep,name=quizes,proto3" json:"quizes,omitempty"`
}

func (x *MultiCreateQuizV1Request) Reset() {
	*x = MultiCreateQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateQuizV1Request) ProtoMessage() {}

func (x *MultiCreateQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateQuizV1Request.ProtoReflect.Descriptor instead.
func (*MultiCreateQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{4}
}

func (x *MultiCreateQuizV1Request) GetQuizes() []*CreateQuizV1Request {
	if x != nil {
		return x.Quizes
	}
	return nil
}

type MultiCreateQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizesIds []uint64 `protobuf:"varint,1,rep,packed,name=quizes_ids,json=quizesIds,proto3" json:"quizes_ids,omitempty"`
}

func (x *MultiCreateQuizV1Response) Reset() {
	*x = MultiCreateQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateQuizV1Response) ProtoMessage() {}

func (x *MultiCreateQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateQuizV1Response.ProtoReflect.Descriptor instead.
func (*MultiCreateQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{5}
}

func (x *MultiCreateQuizV1Response) GetQuizesIds() []uint64 {
	if x != nil {
		return x.QuizesIds
	}
	return nil
}

// Response of Create new Quiz
type CreateQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId uint64 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
}

func (x *CreateQuizV1Response) Reset() {
	*x = CreateQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizV1Response) ProtoMessage() {}

func (x *CreateQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizV1Response.ProtoReflect.Descriptor instead.
func (*CreateQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{6}
}

func (x *CreateQuizV1Response) GetQuizId() uint64 {
	if x != nil {
		return x.QuizId
	}
	return 0
}

// Request of Describe Quiz
type DescribeQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId uint64 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
}

func (x *DescribeQuizV1Request) Reset() {
	*x = DescribeQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeQuizV1Request) ProtoMessage() {}

func (x *DescribeQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeQuizV1Request.ProtoReflect.Descriptor instead.
func (*DescribeQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeQuizV1Request) GetQuizId() uint64 {
	if x != nil {
		return x.QuizId
	}
	return 0
}

// Response of Describe Quiz
type DescribeQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quiz *Quiz `protobuf:"bytes,1,opt,name=quiz,proto3" json:"quiz,omitempty"`
}

func (x *DescribeQuizV1Response) Reset() {
	*x = DescribeQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeQuizV1Response) ProtoMessage() {}

func (x *DescribeQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeQuizV1Response.ProtoReflect.Descriptor instead.
func (*DescribeQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeQuizV1Response) GetQuiz() *Quiz {
	if x != nil {
		return x.Quiz
	}
	return nil
}

// Request on paginate for List of Quizes
// Limit - quizes on page
// Offset - page number
type ListQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListQuizV1Request) Reset() {
	*x = ListQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizV1Request) ProtoMessage() {}

func (x *ListQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizV1Request.ProtoReflect.Descriptor instead.
func (*ListQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{9}
}

func (x *ListQuizV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuizV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Response on paginate for List of Quizes
// Quizes - founded quizes
// CurrentPage - current page
// IsLast - is last page?
type ListQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quizes      []*Quiz `protobuf:"bytes,1,rep,name=quizes,proto3" json:"quizes,omitempty"`
	CurrentPage uint64  `protobuf:"varint,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
}

func (x *ListQuizV1Response) Reset() {
	*x = ListQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuizV1Response) ProtoMessage() {}

func (x *ListQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuizV1Response.ProtoReflect.Descriptor instead.
func (*ListQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListQuizV1Response) GetQuizes() []*Quiz {
	if x != nil {
		return x.Quizes
	}
	return nil
}

func (x *ListQuizV1Response) GetCurrentPage() uint64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

// Request on remove quiz by Id
type RemoveQuizV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId uint64 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
}

func (x *RemoveQuizV1Request) Reset() {
	*x = RemoveQuizV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQuizV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQuizV1Request) ProtoMessage() {}

func (x *RemoveQuizV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQuizV1Request.ProtoReflect.Descriptor instead.
func (*RemoveQuizV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveQuizV1Request) GetQuizId() uint64 {
	if x != nil {
		return x.QuizId
	}
	return 0
}

// Response on remove quiz
// Found - something deleted?
type RemoveQuizV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *RemoveQuizV1Response) Reset() {
	*x = RemoveQuizV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQuizV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQuizV1Response) ProtoMessage() {}

func (x *RemoveQuizV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQuizV1Response.ProtoReflect.Descriptor instead.
func (*RemoveQuizV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveQuizV1Response) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type QuizAPIEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId    uint64                 `protobuf:"varint,1,opt,name=quiz_id,json=quizId,proto3" json:"quiz_id,omitempty"`
	Event     QuizAPIEvent_EventType `protobuf:"varint,2,opt,name=event,proto3,enum=ocp.quiz.api.QuizAPIEvent_EventType" json:"event,omitempty"`
	Error     string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	TraceSpan map[string]string      `protobuf:"bytes,4,rep,name=trace_span,json=traceSpan,proto3" json:"trace_span,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QuizAPIEvent) Reset() {
	*x = QuizAPIEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuizAPIEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuizAPIEvent) ProtoMessage() {}

func (x *QuizAPIEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuizAPIEvent.ProtoReflect.Descriptor instead.
func (*QuizAPIEvent) Descriptor() ([]byte, []int) {
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP(), []int{13}
}

func (x *QuizAPIEvent) GetQuizId() uint64 {
	if x != nil {
		return x.QuizId
	}
	return 0
}

func (x *QuizAPIEvent) GetEvent() QuizAPIEvent_EventType {
	if x != nil {
		return x.Event
	}
	return QuizAPIEvent_CREATE
}

func (x *QuizAPIEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *QuizAPIEvent) GetTraceSpan() map[string]string {
	if x != nil {
		return x.TraceSpan
	}
	return nil
}

var File_api_ocp_quiz_api_ocp_quiz_api_proto protoreflect.FileDescriptor

var file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x71, 0x75, 0x69, 0x7a, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e,
	0x61, 0x70, 0x69, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x04, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x99, 0x01, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x22, 0x55, 0x0a, 0x18, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x69, 0x7a, 0x65,
	0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x71, 0x75, 0x69,
	0x7a, 0x65, 0x73, 0x49, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a,
	0x49, 0x64, 0x22, 0x40, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x51, 0x75,
	0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04,
	0x71, 0x75, 0x69, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x63, 0x70,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x04,
	0x71, 0x75, 0x69, 0x7a, 0x22, 0x53, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28,
	0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28,
	0x00, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x63, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51,
	0x75, 0x69, 0x7a, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x22, 0x37,
	0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52,
	0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0xbc, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x69, 0x7a, 0x41, 0x50,
	0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12,
	0x3a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75,
	0x69, 0x7a, 0x41, 0x50, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x48, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x69, 0x7a, 0x41, 0x50, 0x49, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x1a, 0x3c, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x53, 0x70, 0x61, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x10, 0x03, 0x32, 0xc9, 0x05, 0x0a, 0x11, 0x4f, 0x63, 0x70, 0x51, 0x75, 0x69, 0x7a,
	0x41, 0x70, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x21, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71,
	0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75,
	0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6f, 0x63,
	0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x69,
	0x7a, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x12, 0x23, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x63, 0x70, 0x2e,
	0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x69,
	0x7a, 0x2f, 0x7b, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x70, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x1f, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75,
	0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71,
	0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x7b, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x7d, 0x2f, 0x7b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x7d, 0x12, 0x72, 0x0a,
	0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x21, 0x2e, 0x6f, 0x63,
	0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x69, 0x7a, 0x2f, 0x7b, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x12, 0x79, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x12, 0x26, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51,
	0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6f,
	0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x21, 0x2e, 0x6f, 0x63, 0x70,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6f, 0x63, 0x70, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x75, 0x69, 0x7a, 0x2f, 0x7b, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f,
	0x7a, 0x6f, 0x6e, 0x63, 0x70, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x71, 0x75, 0x69, 0x7a, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x71, 0x75, 0x69, 0x7a, 0x2d,
	0x61, 0x70, 0x69, 0x3b, 0x6f, 0x63, 0x70, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x5f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescOnce sync.Once
	file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescData = file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDesc
)

func file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescGZIP() []byte {
	file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescOnce.Do(func() {
		file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescData)
	})
	return file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDescData
}

var file_api_ocp_quiz_api_ocp_quiz_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_ocp_quiz_api_ocp_quiz_api_proto_goTypes = []interface{}{
	(QuizAPIEvent_EventType)(0),       // 0: ocp.quiz.api.QuizAPIEvent.EventType
	(*Quiz)(nil),                      // 1: ocp.quiz.api.Quiz
	(*UpdateQuizV1Request)(nil),       // 2: ocp.quiz.api.UpdateQuizV1Request
	(*UpdateQuizV1Response)(nil),      // 3: ocp.quiz.api.UpdateQuizV1Response
	(*CreateQuizV1Request)(nil),       // 4: ocp.quiz.api.CreateQuizV1Request
	(*MultiCreateQuizV1Request)(nil),  // 5: ocp.quiz.api.MultiCreateQuizV1Request
	(*MultiCreateQuizV1Response)(nil), // 6: ocp.quiz.api.MultiCreateQuizV1Response
	(*CreateQuizV1Response)(nil),      // 7: ocp.quiz.api.CreateQuizV1Response
	(*DescribeQuizV1Request)(nil),     // 8: ocp.quiz.api.DescribeQuizV1Request
	(*DescribeQuizV1Response)(nil),    // 9: ocp.quiz.api.DescribeQuizV1Response
	(*ListQuizV1Request)(nil),         // 10: ocp.quiz.api.ListQuizV1Request
	(*ListQuizV1Response)(nil),        // 11: ocp.quiz.api.ListQuizV1Response
	(*RemoveQuizV1Request)(nil),       // 12: ocp.quiz.api.RemoveQuizV1Request
	(*RemoveQuizV1Response)(nil),      // 13: ocp.quiz.api.RemoveQuizV1Response
	(*QuizAPIEvent)(nil),              // 14: ocp.quiz.api.QuizAPIEvent
	nil,                               // 15: ocp.quiz.api.QuizAPIEvent.TraceSpanEntry
}
var file_api_ocp_quiz_api_ocp_quiz_api_proto_depIdxs = []int32{
	4,  // 0: ocp.quiz.api.MultiCreateQuizV1Request.quizes:type_name -> ocp.quiz.api.CreateQuizV1Request
	1,  // 1: ocp.quiz.api.DescribeQuizV1Response.quiz:type_name -> ocp.quiz.api.Quiz
	1,  // 2: ocp.quiz.api.ListQuizV1Response.quizes:type_name -> ocp.quiz.api.Quiz
	0,  // 3: ocp.quiz.api.QuizAPIEvent.event:type_name -> ocp.quiz.api.QuizAPIEvent.EventType
	15, // 4: ocp.quiz.api.QuizAPIEvent.trace_span:type_name -> ocp.quiz.api.QuizAPIEvent.TraceSpanEntry
	4,  // 5: ocp.quiz.api.OcpQuizApiService.CreateQuiz:input_type -> ocp.quiz.api.CreateQuizV1Request
	8,  // 6: ocp.quiz.api.OcpQuizApiService.DescribeQuiz:input_type -> ocp.quiz.api.DescribeQuizV1Request
	10, // 7: ocp.quiz.api.OcpQuizApiService.ListQuiz:input_type -> ocp.quiz.api.ListQuizV1Request
	12, // 8: ocp.quiz.api.OcpQuizApiService.RemoveQuiz:input_type -> ocp.quiz.api.RemoveQuizV1Request
	5,  // 9: ocp.quiz.api.OcpQuizApiService.MultiCreateQuiz:input_type -> ocp.quiz.api.MultiCreateQuizV1Request
	2,  // 10: ocp.quiz.api.OcpQuizApiService.UpdateQuiz:input_type -> ocp.quiz.api.UpdateQuizV1Request
	7,  // 11: ocp.quiz.api.OcpQuizApiService.CreateQuiz:output_type -> ocp.quiz.api.CreateQuizV1Response
	9,  // 12: ocp.quiz.api.OcpQuizApiService.DescribeQuiz:output_type -> ocp.quiz.api.DescribeQuizV1Response
	11, // 13: ocp.quiz.api.OcpQuizApiService.ListQuiz:output_type -> ocp.quiz.api.ListQuizV1Response
	13, // 14: ocp.quiz.api.OcpQuizApiService.RemoveQuiz:output_type -> ocp.quiz.api.RemoveQuizV1Response
	6,  // 15: ocp.quiz.api.OcpQuizApiService.MultiCreateQuiz:output_type -> ocp.quiz.api.MultiCreateQuizV1Response
	3,  // 16: ocp.quiz.api.OcpQuizApiService.UpdateQuiz:output_type -> ocp.quiz.api.UpdateQuizV1Response
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_ocp_quiz_api_ocp_quiz_api_proto_init() }
func file_api_ocp_quiz_api_ocp_quiz_api_proto_init() {
	if File_api_ocp_quiz_api_ocp_quiz_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quiz); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQuizV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQuizV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuizAPIEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ocp_quiz_api_ocp_quiz_api_proto_goTypes,
		DependencyIndexes: file_api_ocp_quiz_api_ocp_quiz_api_proto_depIdxs,
		EnumInfos:         file_api_ocp_quiz_api_ocp_quiz_api_proto_enumTypes,
		MessageInfos:      file_api_ocp_quiz_api_ocp_quiz_api_proto_msgTypes,
	}.Build()
	File_api_ocp_quiz_api_ocp_quiz_api_proto = out.File
	file_api_ocp_quiz_api_ocp_quiz_api_proto_rawDesc = nil
	file_api_ocp_quiz_api_ocp_quiz_api_proto_goTypes = nil
	file_api_ocp_quiz_api_ocp_quiz_api_proto_depIdxs = nil
}
